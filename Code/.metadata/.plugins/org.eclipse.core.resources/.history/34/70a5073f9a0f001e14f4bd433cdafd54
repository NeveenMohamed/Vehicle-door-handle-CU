/*
 * ====================================================================================================================================
 *  Project		: Vehicle Door Handle Control Unit
 * 	File Name	: main.c
 *	Team 		: 20
 *	Members		: Abdelrahman Yasser - Omar Ahmed Anwar - Mo'men Mohamed - Neveen Mohamed
 *  ===================================================================================================================================
 */

/*---------------------- Includes -----------------------*/
#include "VehicleDoorHandle.h"
/*---------------------------------------------------------*/

/*---------------------- Global Variables -----------------------*/

uint32 first_time = 0; // variable holds first time for each event.

VDH_Flags allFlags; // An instant from all flags bit field.
/*---------------------------------------------------------------*/

/*------------------------------------------ Main Function -------------------------------------------*/
int main(void) {
	VDH_init(); // Initialize buttons, LEDs, RCC, GPT, EXTI

	while(1){

		/*
		 * Check if the handle button is pressed
		 * and handle door is not opened.
		 */
		if (BUTTON_ReadState(VDH_BUTTONS_PORT, VDH_HANDLE_LOCK_UNLOCK_BUTTON) == BUTTON_PRESSED
				&& allFlags.combinedFlags.door != VDH_DOOR_IS_OPENED) {

			timerIsOn = BUTTON_TimerIsOn; // mark the timer as on for button driver.

			/*
			 * For each button press toggle the state of the handle
			 * initial state as floating state indicates that it is the first press on the handle
			 * this state exists to avoid doing (noActionState) function (handle locked action).
			 */
			if(allFlags.combinedFlags.handle == VDH_HANDLE_FLOATING_STATE){
				allFlags.combinedFlags.handle = VDH_HANDLE_IS_LOCKED;
			}

			if (allFlags.combinedFlags.handle == VDH_HANDLE_IS_LOCKED) {
				allFlags.combinedFlags.handle = VDH_HANDLE_IS_UNLOCKED;
			}
			else {
				allFlags.combinedFlags.handle = VDH_HANDLE_IS_LOCKED;
				allFlags.combinedFlags.door_changeState = VDH_ACTION_IS_NOT_DONE;
			}

			VDH_stateAllLeds(LED_ON); // Activate all LEDs.

			allFlags.combinedFlags.end_action = VDH_ACTION_IS_NOT_DONE; // Mark end action as not done

			allFlags.combinedFlags.timer_10SecFlag = VDH_10SEC_NOT_ELAPSED; // Mark 10 Seconds timer as not elapsed

			allFlags.combinedFlags.doorUnlock_action = VDH_ACTION_IS_NOT_DONE; // Mark door unlock action as not done

			GPT_StartTimer(TIM2,VDH_SECURITY_TIME_IN_ms); // start the timer for 10 seconds

			first_time = GPT_GetElapsedTime(TIM2); // Update first time.

		}


		if (allFlags.combinedFlags.handle == VDH_HANDLE_IS_UNLOCKED) {

			if (allFlags.combinedFlags.doorUnlock_action == VDH_ACTION_IS_NOT_DONE) {
				VDH_handleUnlock();
			}

#ifndef EXTI_H_
			if (BUTTON_ReadState(VDH_BUTTONS_PORT, VDH_DOOR_LOCK_UNLOCK_BUTTON) == BUTTON_PRESSED) {

				VDH_doorButtonPressed();
			}
#endif

			if ((allFlags.combinedFlags.door == VDH_DOOR_IS_CLOSED)
					&& (allFlags.combinedFlags.door_action == VDH_ACTION_IS_NOT_DONE)) {

				VDH_doorIsClosed();

			}
			if (GPT_CheckTimeIsElapsed(TIM2) == GPT_Elapsed
					&& allFlags.combinedFlags.timer_10SecFlag == VDH_10SEC_NOT_ELAPSED
					&& allFlags.combinedFlags.door == VDH_DOOR_IS_CLOSED
					&& allFlags.combinedFlags.door_changeState == VDH_ACTION_IS_NOT_DONE) {

				GPT_StartTimer(TIM2,VDH_PROCESS_TIME_IN_ms);
				allFlags.combinedFlags.timer_10SecFlag = VDH_10SEC_ELAPSED;

				first_time = GPT_GetElapsedTime(TIM2);

				VDH_stateAllLeds(LED_OFF);

				LED_Activate(VDH_LEDS_PORT, VDH_HAZARD_LIGHTS_LED, LED_ON);


			}
			if (allFlags.combinedFlags.timer_10SecFlag == VDH_10SEC_ELAPSED){

				VDH_noActionState();

			}
		}
		else if(allFlags.combinedFlags.handle == VDH_HANDLE_IS_LOCKED
				&& allFlags.combinedFlags.door == VDH_DOOR_IS_CLOSED){

			LED_Activate(VDH_LEDS_PORT, VDH_AMBIENT_LIGHT_LED, LED_OFF);

			LED_Activate(VDH_LEDS_PORT, VDH_LOCK_LED, LED_OFF);

			VDH_noActionState();

		}
	}

	return 0;
}
/*----------------------------------------------------------------------------------------------------*/




